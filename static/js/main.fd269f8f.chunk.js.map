{"version":3,"sources":["libs/colors.js","libs/sleep.js","QuoteBox.js","App.js","reportWebVitals.js","index.js"],"names":["colors","sleep","ms","Promise","resolve","setTimeout","controlAnimations","a","quoteText","document","querySelector","quoteAuthor","app","btn","classList","toggle","disabled","QuoteBox","currColor","setCurrColor","setPrevColor","randColor","useState","content","author","quoteData","setQuoteData","URL","getQuote","axios","get","response","data","useEffect","className","id","style","href","target","rel","onClick","backgroundColor","randomColor","Math","floor","random","length","App","prevColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fd269f8f.chunk.js","sourcesContent":["const colors = [\n  \"#FF6633\",\n  \"#FFB399\",\n  \"#FF33FF\",\n  \"#FFFF99\",\n  \"#00B3E6\",\n  \"#E6B333\",\n  \"#3366E6\",\n  \"#999966\",\n  \"#99FF99\",\n  \"#B34D4D\",\n  \"#80B300\",\n  \"#809900\",\n  \"#E6B3B3\",\n  \"#6680B3\",\n  \"#66991A\",\n  \"#FF99E6\",\n  \"#CCFF1A\",\n  \"#FF1A66\",\n  \"#E6331A\",\n  \"#33FFCC\",\n  \"#66994D\",\n  \"#B366CC\",\n  \"#4D8000\",\n  \"#B33300\",\n  \"#CC80CC\",\n  \"#66664D\",\n  \"#991AFF\",\n  \"#E666FF\",\n  \"#4DB3FF\",\n  \"#1AB399\",\n  \"#E666B3\",\n  \"#33991A\",\n  \"#CC9999\",\n  \"#B3B31A\",\n  \"#00E680\",\n  \"#4D8066\",\n  \"#809980\",\n  \"#E6FF80\",\n  \"#1AFF33\",\n  \"#999933\",\n  \"#FF3380\",\n  \"#CCCC00\",\n  \"#66E64D\",\n  \"#4D80CC\",\n  \"#9900B3\",\n  \"#E64D66\",\n  \"#4DB380\",\n  \"#FF4D4D\",\n  \"#99E6E6\",\n  \"#6666FF\",\n];\n\nexport default colors;\n","function sleep(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nexport { sleep };\n\n// // Example usage\n// async function funkyFunc() {\n//   // do something\n//   await sleep(1000);\n//   // do something else\n// }\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { sleep } from \"./libs/sleep\";\nimport axios from \"axios\";\nimport \"./QuoteBox.css\";\n\nasync function controlAnimations() {\n  // ugly but it works\n  const quoteText = document.querySelector(\".QuoteBox-text\");\n  const quoteAuthor = document.querySelector(\".QuoteBox-author\");\n  const app = document.querySelector(\".App\");\n  const btn = document.querySelector(\".QuoteBox-new-quote\");\n\n  quoteText.classList.toggle(\"animate__fadeOut\");\n  quoteAuthor.classList.toggle(\"animate__fadeOut\");\n  app.classList.toggle(\"bg-pan-top\");\n  btn.classList.toggle(\"bg-pan-top\");\n  btn.disabled = true;\n\n  await sleep(2000);\n  quoteText.classList.toggle(\"animate__fadeOut\");\n  quoteAuthor.classList.toggle(\"animate__fadeOut\");\n  quoteText.classList.toggle(\"animate__fadeIn\");\n  quoteAuthor.classList.toggle(\"animate__fadeIn\");\n\n  await sleep(2000);\n  quoteText.classList.toggle(\"animate__fadeIn\");\n  quoteAuthor.classList.toggle(\"animate__fadeIn\");\n\n  await sleep(5000);\n  app.classList.toggle(\"bg-pan-top\");\n  btn.classList.toggle(\"bg-pan-top\");\n  btn.disabled = false;\n}\n\nfunction QuoteBox({ currColor, setCurrColor, setPrevColor, randColor }) {\n  const [quoteData, setQuoteData] = useState({ content: \"\", author: \"\" });\n  const URL = \"https://api.quotable.io/random\";\n\n  async function getQuote() {\n    const response = await axios.get(URL);\n    const { content, author } = response.data;\n\n    controlAnimations();\n    setPrevColor(currColor);\n    setCurrColor(randColor);\n\n    setTimeout(() => {\n      setQuoteData({ content, author });\n    }, 2000);\n  }\n\n  useEffect(() => {\n    getQuote();\n  }, []);\n\n  return (\n    <div className=\"QuoteBox box\" id=\"quote-box\" style={{ currColor }}>\n      <p\n        className=\"block QuoteBox-text animate__animated animate__slow\"\n        id=\"text\"\n      >\n        {<i className=\"fa-solid fa-quote-left\"></i>}\n        {quoteData.content}\n      </p>\n      <p\n        className=\"block QuoteBox-author animate__animated animate__slow\"\n        id=\"author\"\n      >\n        â€” {quoteData.author}\n      </p>\n      <div className=\"QuoteBox-buttons\">\n        <a\n          href={`https://twitter.com/intent/tweet?hashtags=quotes&text=\"${quoteData.content}\" ${quoteData.author}`}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          id=\"tweet-quote\"\n          className=\"tweet-quote\"\n        >\n          <i className=\"fa-brands fa-twitter-square\" style={{ currColor }}></i>\n        </a>\n        <button\n          id=\"new-quote\"\n          className=\"button QuoteBox-new-quote\"\n          onClick={getQuote}\n          style={{ backgroundColor: currColor }}\n        >\n          New Quote\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default QuoteBox;\n","import { useState } from \"react\";\nimport colors from \"./libs/colors\";\nimport QuoteBox from \"./QuoteBox\";\nimport \"./App.css\";\n\nconst randomColor = () => {\n  return colors[Math.floor(Math.random() * colors.length)];\n};\n\nfunction App() {\n  const [prevColor, setPrevColor] = useState(\"#fafafa\");\n  const [currColor, setCurrColor] = useState(randomColor());\n\n  return (\n    <div\n      className=\"App\"\n      style={{\n        \"--bg-color-one\": prevColor,\n        \"--bg-color-two\": currColor,\n        backgroundColor: currColor,\n      }}\n    >\n      <QuoteBox\n        currColor={currColor}\n        setCurrColor={setCurrColor}\n        setPrevColor={setPrevColor}\n        randColor={randomColor}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}